Power 2.0 - Return of AJAX 1. 
Modify the Power php script so that it GETs a power parameter from the URL (ex. pow=3) and displays a table with two columns: 
 First column: Numbers from 1 to 10  Second column: 
Power of these numbers according to the GET parameter (ex. 1 to 10 in the power of 3) 
2. Create another php or html file that has four buttons named: "^2", "^3" and "^4", and a div below the buttons 
3. When a button is pressed, request the power.php with the respective GET parameters by using AJAX, and display the table in the div 


power.php


<?php
$power = $_GET['pow'];

echo "<table>";
echo "<tr><th>Number</th><th>Result</th></tr>";
for ($i = 1; $i <= 10; $i++) {
    $result = pow($i, $power);
    echo "<tr>";
    echo "<td>$i</td>";
    echo "<td>$result</td>";
    echo "</tr>";
}
echo "</table>";
?>


index.html


<!DOCTYPE html>
<html>
<head>
    <title>Power Calculator</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>
<body>
    <button id="power2">^2</button>
    <button id="power3">^3</button>
    <button id="power4">^4</button>
    <div id="result"></div>

    <script>
    $(document).ready(function() {
        $('#power2, #power3, #power4').click(function() {
            var power = $(this).attr('id').substring(5); // Extract the power from button id
            $.ajax({
                url: 'power.php',
                data: { pow: power },
                success: function(response) {
                    $('#result').html(response);
                }
            });
        });
    });
    </script>
</body>
</html>


